// ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶®‡ßÄ‡ßü ‡¶≤‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡¶∞‡¶ø‡¶ó‡ßÅ‡¶≤‡ßã ‡¶®‡¶ø‡ßü‡ßá ‡¶Ü‡¶∏‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
const TelegramBot = require('node-telegram-bot-api');
const { initializeApp, cert } = require('firebase-admin/app');
const { getFirestore, FieldValue } = require('firebase-admin/firestore');

// --- ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶¶‡¶ø‡¶® ---
const WEBAPP_URL = 'https://gleeful-salmiakki-c9bf45.netlify.app/'; // !! ‡¶ñ‡ßÅ‡¶¨‡¶á ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£: ‡¶è‡¶á URL ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá !!
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN; // ‡¶è‡¶ü‡¶ø ‡¶Ü‡¶Æ‡¶∞‡¶æ Render-‡¶è ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßá‡¶õ‡¶ø
const serviceAccount = JSON.parse(process.env.FIREBASE_KEY); // ‡¶è‡¶ü‡¶ø‡¶ì Render-‡¶è ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶Ü‡¶õ‡ßá

// Firebase ‡¶è‡¶¨‡¶Ç Telegram Bot ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
initializeApp({ credential: cert(serviceAccount) });
const db = getFirestore();
const bot = new TelegramBot(BOT_TOKEN);

// --- Render.com Health Check - START ---
// ‡¶è‡¶á ‡¶Ö‡¶Ç‡¶∂‡¶ü‡¶ø Render-‡¶ï‡ßá ‡¶ú‡¶æ‡¶®‡¶æ‡¶®‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ø‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶¨‡¶ü‡¶ü‡¶ø ‡¶†‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá ‡¶ö‡¶≤‡¶õ‡ßá
const http = require('http');
const server = http.createServer((req, res) => {
    res.writeHead(200, { 'Content-Type': 'text/plain' });
    res.end('Bot is alive');
});
server.listen(10000, () => {
    console.log('Health check server running on port 10000');
});
// --- Render.com Health Check - END ---

console.log('Bot is starting up...');

// ‡¶Ø‡¶ñ‡¶® ‡¶ï‡ßã‡¶®‡ßã ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ /start ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¶‡ßá‡ßü
bot.onText(/\/start(?: (.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const newUserId = `tg_${chatId}`; // ‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶∞ ‡¶Ü‡¶á‡¶°‡¶ø
    const referrerId = match[1]; // ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶≤ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶•‡ßá‡¶ï‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡¶æ‡¶∞‡ßá‡¶∞ ‡¶Ü‡¶á‡¶°‡¶ø

    try {
        const newUserRef = db.collection('users').doc(newUserId);
        const newUserDoc = await newUserRef.get();

        // ‡¶Ø‡¶¶‡¶ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶®‡¶§‡ßÅ‡¶® ‡¶π‡ßü, ‡¶§‡¶¨‡ßá‡¶á ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶≤ ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶π‡¶¨‡ßá
        if (!newUserDoc.exists) {
            console.log(`New user detected: ${newUserId}`);
            
            const defaultUserData = {
                userId: newUserId,
                csBalance: 0, usdBalance: 0,
                hashPower: 10, dailyUsdReward: 0,
                lastTapTime: 0, purchasedPackages: [],
                referralCount: 0, referralEarnings: 0,
                createdAt: FieldValue.serverTimestamp()
            };

            if (referrerId && referrerId !== newUserId) {
                console.log(`User ${newUserId} was referred by ${referrerId}.`);
                defaultUserData.referredBy = referrerId;

                const referrerRef = db.collection('users').doc(referrerId);
                await referrerRef.update({
                    referralCount: FieldValue.increment(1)
                });
                console.log(`Referrer count for ${referrerId} updated.`);
            }
            
            await newUserRef.set(defaultUserData);
            console.log(`New user data for ${newUserId} saved to Firebase.`);
        }

        // ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶ï‡ßá ‡¶Æ‡¶ø‡¶®‡¶ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶ñ‡ßã‡¶≤‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶ü‡¶® ‡¶™‡¶æ‡¶†‡¶æ‡¶®
        bot.sendMessage(chatId, "Welcome to Coin Switch! üöÄ\n\nClick the 'Start Mining' button below to open the app and start earning!", {
            reply_markup: {
                inline_keyboard: [
                    [{ text: 'üíé Start Mining', web_app: { url: WEBAPP_URL } }]
                ]
            }
        });

    } catch (error) {
        console.error('Error processing /start command:', error);
        bot.sendMessage(chatId, "Sorry, something went wrong. Please try again later.");
    }
});

console.log('Bot is running and listening for commands...');
